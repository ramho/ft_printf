*if len of arg longer than width, no need
*if precision longer than arg, no need
* precision tj avant la width
*if no type, prinft just prints letter and ignored conversion
*ternere pour flag 0 et espace
* for float, if no specific precision , flag.precision = 6 else equals value of precision (.0 = .)
* diouxX, si precision remplie de 0 et apres width


TO DO

--> turn off flags
-- > function if no if no type (ft_printf("%5.3y  yyyyyyy", 3))

CHECK

need to handle % without arg ? (ft_printf("hello %s des %0.5d la %-#0.2s\n"))
  ft_printf("|%-10.-15s|\n", s);
  printf("printf |%-10.-15s|\n", s);

  find alternative to ft_strlen of a char, because when you send a pointer to char c,
  	it sometimes sends additional/random chars along and affects ft_strlen return

va_arg, si precison = 0 et int est paire, no arrondisement, tmp_floa

si pas de type, what do do ?
